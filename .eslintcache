[{"D:\\HocReactJS\\luyen_tap\\todolist\\src\\index.js":"1","D:\\HocReactJS\\luyen_tap\\todolist\\src\\reportWebVitals.js":"2","D:\\HocReactJS\\luyen_tap\\todolist\\src\\App.js":"3","D:\\HocReactJS\\luyen_tap\\todolist\\src\\components\\taskForm.js":"4","D:\\HocReactJS\\luyen_tap\\todolist\\src\\components\\control.js":"5","D:\\HocReactJS\\luyen_tap\\todolist\\src\\components\\table.js":"6","D:\\HocReactJS\\luyen_tap\\todolist\\src\\components\\tableItems.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":5724,"mtime":1608740184501,"results":"11","hashOfConfig":"9"},{"size":3834,"mtime":1608728956197,"results":"12","hashOfConfig":"9"},{"size":3442,"mtime":1608734882451,"results":"13","hashOfConfig":"9"},{"size":2325,"mtime":1608734884572,"results":"14","hashOfConfig":"9"},{"size":1272,"mtime":1608734886129,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y7681l",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"D:\\HocReactJS\\luyen_tap\\todolist\\src\\index.js",[],"D:\\HocReactJS\\luyen_tap\\todolist\\src\\reportWebVitals.js",[],"D:\\HocReactJS\\luyen_tap\\todolist\\src\\App.js",[],"D:\\HocReactJS\\luyen_tap\\todolist\\src\\components\\taskForm.js",[],["34","35"],"D:\\HocReactJS\\luyen_tap\\todolist\\src\\components\\control.js",["36","37","38","39"],"import React, { Component } from 'react'\r\n\r\nclass TaskControl extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            keyWord: ''//,\r\n            // sort:{\r\n            //     by:'name',\r\n            //     value:1\r\n            // }\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        console.log(nextProps)\r\n    }\r\n    onChange = (event) => {\r\n        var target = event.target\r\n        var name = target.name\r\n        var value = target.value\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    onSearch = (event) => {\r\n        event.preventDefault()\r\n        console.log(this.state)\r\n        this.props.onSearch(this.state.keyWord)\r\n    }\r\n    onClick=(sortBy,sortValue)=>{\r\n        // console.log(`sortBy: ${sortBy} ; sortValue : ${sortValue}`)\r\n        // this.setState({\r\n        //    sort:{\r\n        //     by:sortBy,\r\n        //     value:sortValue\r\n        //    }\r\n        // })\r\n        this.props.onSort(sortBy,sortValue)\r\n    }\r\n    render() {\r\n        var { keyWord} = this.state //sort\r\n        var {sortBy,sortValue} = this.props\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-9\">\r\n                        <form className=\" my-2 my-lg-0 d-flex outline-primary\">\r\n                            <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" name=\"keyWord\" value={keyWord} onChange={this.onChange} />\r\n                            <button className=\"btn btn-outline-primary my-2 my-sm-0 m-2\" type=\"submit\" onClick={this.onSearch}>Search</button>\r\n\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <div className=\"dropdown\">\r\n                            <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                Sắp xếp\r\n                                </button>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                {/* {(sort.by==='name' && sort.value===1)?\"fa fa-check\":\"\"} */}\r\n                                <a className=\"dropdown-item\" onClick={()=>{this.onClick('name',1)}}>Tên A to Z <i className={(sortBy==='name' && sortValue===1)?\"fa fa-check\":\"\"}></i></a> \r\n                                <a className=\"dropdown-item\" onClick={()=>{this.onClick('name',-1)}}>Tên Z to A <i className={(sortBy==='name' && sortValue===-1)?\"fa fa-check\":\"\"}></i></a>\r\n                                <hr></hr>\r\n                                <a className=\"dropdown-item\" onClick={()=>{this.onClick('status',1)}}>Trạng thái : <span className=\"text-danger\">Ưu tiên </span><i className={(sortBy==='status' && sortValue===1)?\"fa fa-check\":\"\"}></i></a>\r\n                                <a className=\"dropdown-item\" onClick={()=>{this.onClick('status',-1)}}>Trạng thái : <span className=\"text-success\">Đang chuẩn bị </span><i className={(sortBy==='status' && sortValue===-1)?\"fa fa-check\":\"\"}></i></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskControl;\r\n","D:\\HocReactJS\\luyen_tap\\todolist\\src\\components\\table.js",["40"],"import React, { Component } from 'react'\r\nimport TaskItem from './tableItems'\r\nclass TaskTable extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            filterName:'',\r\n            filterStatus:-1 //all: -1, ưu tiên :0, đang chuẩn bị : 1\r\n        }\r\n    }\r\n    onChange=(event)=>{\r\n        var target = event.target\r\n        var name = target.name\r\n        var value = target.value\r\n        this.props.onFilter(name==='filterName'?value:this.state.filterName, name==='filterStatus'?value:this.state.filterStatus)\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n    render() {\r\n        var {filterName,filterStatus}=this.state\r\n        var {tasks} = this.props\r\n        var elements = tasks.map((task,index)=>{\r\n            return  <TaskItem task={task} index={index} key={index} onUpdatedStatus={this.props.onUpdatedStatus} onDelete={this.props.onDelete} onUpdate={this.props.onUpdate}></TaskItem>\r\n        })\r\n        return (\r\n            <table className=\"table m-2\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>STT</th>\r\n                        <th>Công việc</th>\r\n                        <th>Trạng thái\r\n                            \r\n                        </th>\r\n                        <th>Ghi chú</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td scope=\"row\"></td>\r\n                        <td>\r\n                            <input type=\"text\" className=\"form-control\" name=\"filterName\" value={filterName} onChange={this.onChange}/>\r\n                        </td>\r\n                        <td>\r\n                            <select className=\"custom-select\" name=\"filterStatus\" value={filterStatus} onChange={this.onChange}>\r\n                                <option value={-1}>Tất cả</option>\r\n                                <option value={0}>Ưu tiên</option>\r\n                                <option value={1}>Đang chuẩn bị</option>\r\n                            </select>\r\n                        </td>\r\n                        <td></td>\r\n                    </tr>\r\n                    {elements}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskTable;\r\n","D:\\HocReactJS\\luyen_tap\\todolist\\src\\components\\tableItems.js",["41","42"],"import React, { Component } from 'react'\r\n\r\nclass TaskItem extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    onUpdatedStatus=()=>{\r\n        this.props.onUpdatedStatus(this.props.task.id)\r\n    }\r\n    onDelete=()=>{\r\n        this.props.onDelete(this.props.task.id)\r\n    }\r\n    onUpdate=()=>{\r\n        this.props.onUpdate(this.props.task.id)\r\n    }\r\n    render() {\r\n        var {task,index} = this.props;\r\n        return (\r\n                    <tr>\r\n                        <td scope=\"row\">{index+1}</td>\r\n                        <td>{task.name}</td>\r\n                        <td>\r\n                            <span className={task.status?' btn btn-danger':'btn btn-success'} onClick={this.onUpdatedStatus}>{task.status?'Ưu tiên':'Đang chuẩn bị'}</span>\r\n                        </td>\r\n                        <td>\r\n                            <button type=\"submit\" className=\"btn btn-primary m-2\" onClick={this.onUpdate}><i className=\"fa fa-edit\" /> Sửa</button>\r\n                            <button type=\"submit\" className=\"btn btn-primary m-2\" onClick={this.onDelete}><i className=\"fa fa-window-close\" /> Hủy bỏ</button>\r\n                        </td>\r\n                    </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskItem;\r\n",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":60,"column":33,"nodeType":"49","endLine":60,"endColumn":101},{"ruleId":"47","severity":1,"message":"48","line":61,"column":33,"nodeType":"49","endLine":61,"endColumn":102},{"ruleId":"47","severity":1,"message":"48","line":63,"column":33,"nodeType":"49","endLine":63,"endColumn":103},{"ruleId":"47","severity":1,"message":"48","line":64,"column":33,"nodeType":"49","endLine":64,"endColumn":104},{"ruleId":"50","severity":1,"message":"51","line":41,"column":29,"nodeType":"52","endLine":41,"endColumn":40},{"ruleId":"53","severity":1,"message":"54","line":4,"column":5,"nodeType":"55","messageId":"56","endLine":6,"endColumn":6},{"ruleId":"50","severity":1,"message":"51","line":20,"column":29,"nodeType":"52","endLine":20,"endColumn":40},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]